/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export const STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');
/** @type {?} */
export const STRIPE_OPTIONS = new InjectionToken('Stripe Options');
/**
 * @record
 */
export function StripeJS() { }
if (false) {
    /**
     * @param {?=} options
     * @return {?}
     */
    StripeJS.prototype.elements = function (options) { };
    /**
     * @param {?} el
     * @param {?=} cardData
     * @return {?}
     */
    StripeJS.prototype.createToken = function (el, cardData) { };
    /**
     * @param {?} account
     * @param {?} accountData
     * @return {?}
     */
    StripeJS.prototype.createToken = function (account, accountData) { };
    /**
     * @param {?} account
     * @param {?} bankAccountData
     * @return {?}
     */
    StripeJS.prototype.createToken = function (account, bankAccountData) { };
    /**
     * @param {?} pii
     * @param {?} piiData
     * @return {?}
     */
    StripeJS.prototype.createToken = function (pii, piiData) { };
    /**
     * @param {?} el
     * @param {?=} sourceData
     * @return {?}
     */
    StripeJS.prototype.createSource = function (el, sourceData) { };
    /**
     * @param {?} sourceData
     * @return {?}
     */
    StripeJS.prototype.createSource = function (sourceData) { };
    /**
     * @param {?} source
     * @return {?}
     */
    StripeJS.prototype.retrieveSource = function (source) { };
    /**
     * @param {?} options
     * @return {?}
     */
    StripeJS.prototype.paymentRequest = function (options) { };
    /**
     * @param {?} clientSecret
     * @param {?} cardElement
     * @param {?=} data
     * @return {?}
     */
    StripeJS.prototype.handleCardPayment = function (clientSecret, cardElement, data) { };
    /**
     * @param {?} clientSecret
     * @param {?=} data
     * @return {?}
     */
    StripeJS.prototype.handleCardPayment = function (clientSecret, data) { };
    /**
     * @param {?} clientSecret
     * @return {?}
     */
    StripeJS.prototype.handleCardAction = function (clientSecret) { };
    /**
     * @param {?} clientSecret
     * @param {?=} data
     * @return {?}
     */
    StripeJS.prototype.confirmPaymentIntent = function (clientSecret, data) { };
    /**
     * @param {?} type
     * @param {?} cardElement
     * @param {?=} data
     * @return {?}
     */
    StripeJS.prototype.createPaymentMethod = function (type, cardElement, data) { };
}
/**
 * @record
 */
export function Options() { }
if (false) {
    /** @type {?|undefined} */
    Options.prototype.stripeAccount;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXN0cmlwZS8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmZhY2VzL3N0cmlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUF3Qi9DLE1BQU0sT0FBTyxzQkFBc0IsR0FBRyxJQUFJLGNBQWMsQ0FDdEQsd0JBQXdCLENBQ3pCOztBQUNELE1BQU0sT0FBTyxjQUFjLEdBQUcsSUFBSSxjQUFjLENBQVUsZ0JBQWdCLENBQUM7Ozs7QUFFM0UsOEJBZ0NDOzs7Ozs7SUEvQkMscURBQThDOzs7Ozs7SUFDOUMsNkRBQTJFOzs7Ozs7SUFDM0UscUVBQThFOzs7Ozs7SUFDOUUseUVBR3dCOzs7Ozs7SUFDeEIsNkRBQThEOzs7Ozs7SUFDOUQsZ0VBQTBFOzs7OztJQUMxRSw0REFBNEQ7Ozs7O0lBQzVELDBEQUE0RDs7Ozs7SUFDNUQsMkRBQW9EOzs7Ozs7O0lBQ3BELHNGQUlnQzs7Ozs7O0lBQ2hDLHlFQUdnQzs7Ozs7SUFDaEMsa0VBQXFFOzs7Ozs7SUFDckUsNEVBR2dDOzs7Ozs7O0lBQ2hDLGdGQUlnQzs7Ozs7QUFHbEMsNkJBRUM7OztJQURDLGdDQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEVsZW1lbnRzLCBFbGVtZW50c09wdGlvbnMgfSBmcm9tICcuL2VsZW1lbnRzJztcbmltcG9ydCB7IEVsZW1lbnQgfSBmcm9tICcuL2VsZW1lbnQnO1xuaW1wb3J0IHtcbiAgQWNjb3VudCxcbiAgQWNjb3VudERhdGEsXG4gIEJhbmtBY2NvdW50LFxuICBCYW5rQWNjb3VudERhdGEsXG4gIENhcmREYXRhT3B0aW9ucyxcbiAgUGlpLFxuICBQaWlEYXRhLFxuICBUb2tlblJlc3VsdFxufSBmcm9tICcuL3Rva2VuJztcbmltcG9ydCB7IFNvdXJjZURhdGEsIFNvdXJjZVBhcmFtcywgU291cmNlUmVzdWx0IH0gZnJvbSAnLi9zb3VyY2VzJztcbmltcG9ydCB7IFBheW1lbnRSZXF1ZXN0T3B0aW9ucyB9IGZyb20gJy4vcGF5bWVudC1yZXF1ZXN0JztcbmltcG9ydCB7XG4gIEhhbmRsZUNhcmRQYXltZW50T3B0aW9ucyxcbiAgUGF5bWVudEludGVudFJlc3VsdCxcbiAgQ29uZmlybVBheW1lbnRJbnRlbnRPcHRpb25zLFxuICBQYXltZW50TWV0aG9kRGF0YSxcbiAgUGF5bWVudE1ldGhvZFJlc3VsdFxufSBmcm9tICcuL3BheW1lbnQtaW50ZW50JztcblxuZXhwb3J0IGNvbnN0IFNUUklQRV9QVUJMSVNIQUJMRV9LRVkgPSBuZXcgSW5qZWN0aW9uVG9rZW48c3RyaW5nPihcbiAgJ1N0cmlwZSBQdWJsaXNoYWJsZSBLZXknXG4pO1xuZXhwb3J0IGNvbnN0IFNUUklQRV9PUFRJT05TID0gbmV3IEluamVjdGlvblRva2VuPE9wdGlvbnM+KCdTdHJpcGUgT3B0aW9ucycpO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmlwZUpTIHtcbiAgZWxlbWVudHMob3B0aW9ucz86IEVsZW1lbnRzT3B0aW9ucyk6IEVsZW1lbnRzO1xuICBjcmVhdGVUb2tlbihlbDogRWxlbWVudCwgY2FyZERhdGE/OiBDYXJkRGF0YU9wdGlvbnMpOiBQcm9taXNlPFRva2VuUmVzdWx0PjtcbiAgY3JlYXRlVG9rZW4oYWNjb3VudDogQWNjb3VudCwgYWNjb3VudERhdGE6IEFjY291bnREYXRhKTogUHJvbWlzZTxUb2tlblJlc3VsdD47XG4gIGNyZWF0ZVRva2VuKFxuICAgIGFjY291bnQ6IEJhbmtBY2NvdW50LFxuICAgIGJhbmtBY2NvdW50RGF0YTogQmFua0FjY291bnREYXRhXG4gICk6IFByb21pc2U8VG9rZW5SZXN1bHQ+O1xuICBjcmVhdGVUb2tlbihwaWk6IFBpaSwgcGlpRGF0YTogUGlpRGF0YSk6IFByb21pc2U8VG9rZW5SZXN1bHQ+O1xuICBjcmVhdGVTb3VyY2UoZWw6IEVsZW1lbnQsIHNvdXJjZURhdGE/OiBTb3VyY2VEYXRhKTogUHJvbWlzZTxTb3VyY2VSZXN1bHQ+O1xuICBjcmVhdGVTb3VyY2Uoc291cmNlRGF0YTogU291cmNlRGF0YSk6IFByb21pc2U8U291cmNlUmVzdWx0PjtcbiAgcmV0cmlldmVTb3VyY2Uoc291cmNlOiBTb3VyY2VQYXJhbXMpOiBQcm9taXNlPFNvdXJjZVJlc3VsdD47XG4gIHBheW1lbnRSZXF1ZXN0KG9wdGlvbnM6IFBheW1lbnRSZXF1ZXN0T3B0aW9ucyk6IGFueTtcbiAgaGFuZGxlQ2FyZFBheW1lbnQoXG4gICAgY2xpZW50U2VjcmV0OiBzdHJpbmcsXG4gICAgY2FyZEVsZW1lbnQ6IEVsZW1lbnQsXG4gICAgZGF0YT86IEhhbmRsZUNhcmRQYXltZW50T3B0aW9uc1xuICApOiBQcm9taXNlPFBheW1lbnRJbnRlbnRSZXN1bHQ+O1xuICBoYW5kbGVDYXJkUGF5bWVudChcbiAgICBjbGllbnRTZWNyZXQ6IHN0cmluZyxcbiAgICBkYXRhPzogSGFuZGxlQ2FyZFBheW1lbnRPcHRpb25zXG4gICk6IFByb21pc2U8UGF5bWVudEludGVudFJlc3VsdD47XG4gIGhhbmRsZUNhcmRBY3Rpb24oY2xpZW50U2VjcmV0OiBzdHJpbmcpOiBQcm9taXNlPFBheW1lbnRJbnRlbnRSZXN1bHQ+O1xuICBjb25maXJtUGF5bWVudEludGVudChcbiAgICBjbGllbnRTZWNyZXQ6IHN0cmluZyxcbiAgICBkYXRhPzogQ29uZmlybVBheW1lbnRJbnRlbnRPcHRpb25zXG4gICk6IFByb21pc2U8UGF5bWVudEludGVudFJlc3VsdD47XG4gIGNyZWF0ZVBheW1lbnRNZXRob2QoXG4gICAgdHlwZTogc3RyaW5nLFxuICAgIGNhcmRFbGVtZW50OiBFbGVtZW50LFxuICAgIGRhdGE/OiBQYXltZW50TWV0aG9kRGF0YVxuICApOiBQcm9taXNlPFBheW1lbnRNZXRob2RSZXN1bHQ+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9wdGlvbnMge1xuICBzdHJpcGVBY2NvdW50Pzogc3RyaW5nO1xufVxuIl19