{"version":3,"file":"cache.module.js","sourceRoot":"","sources":["../src/cache.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAuB,cAAc,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAe,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAEtD,MAAM,CAAC,IAAM,MAAM,GAAG,IAAI,cAAc,CAAc,QAAQ,CAAC,CAAC;AAEhE,IAAI,mBAAmB,GAAgB;IACrC,SAAS,EAAE,EAAE;CACd,CAAC;AAEF,MAAM,4BAA4B,OAAgB,EAAE,WAAwB;IAC1E,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IAE9D,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;CAClF;;;;IAWQ,mBAAO,GAAd,UAAe,WAAyB;QACtC,MAAM,CAAC;YACL,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE;gBAC1C;oBACE,OAAO,EAAE,YAAY;oBACrB,UAAU,EAAE,iBAAiB;oBAC7B,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;iBACxB;aACF;SACF,CAAC;KACH;;gBArBF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,kBAAkB,CAAC,OAAO,CAAC;4BACzB,IAAI,EAAE,cAAc;4BACpB,WAAW,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC;yBAC/C,CAAC;qBACH;iBACF;;sBAxBD;;SAyBa,WAAW","sourcesContent":["import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CacheConfig, CacheService } from './cache.service';\nimport { IonicStorageModule, Storage } from '@ionic/storage';\nimport { CacheStorageService } from './cache-storage';\n\nexport const CONFIG = new InjectionToken<CacheConfig>('CONFIG');\n\nlet cacheConfigDefaults: CacheConfig = {\n  keyPrefix: ''\n};\n\nexport function buildCacheService(storage: Storage, cacheConfig: CacheConfig) {\n  cacheConfig = Object.assign(cacheConfigDefaults, cacheConfig);\n\n  return new CacheService(new CacheStorageService(storage, cacheConfig.keyPrefix));\n}\n\n@NgModule({\n  imports: [\n    IonicStorageModule.forRoot({\n      name: '__ionicCache',\n      driverOrder: ['indexeddb', 'sqlite', 'websql']\n    })\n  ]\n})\nexport class CacheModule {\n  static forRoot(cacheConfig?: CacheConfig): ModuleWithProviders {\n    return {\n      ngModule: CacheModule,\n      providers: [\n        { provide: CONFIG, useValue: cacheConfig },\n        {\n          provide: CacheService,\n          useFactory: buildCacheService,\n          deps: [Storage, CONFIG]\n        }\n      ]\n    };\n  }\n}\n"]}