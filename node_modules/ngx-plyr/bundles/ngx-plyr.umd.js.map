{"version":3,"file":"ngx-plyr.umd.js.map","sources":["ng://ngx-plyr/lib/plyr-driver/default-plyr-driver.ts","ng://ngx-plyr/lib/plyr/plyr.component.ts","ng://ngx-plyr/lib/plyr.module.ts"],"sourcesContent":["import Plyr from 'plyr';\nimport { PlyrDriver, PlyrDriverCreateParams, PlyrDriverDestroyParams, PlyrDriverUpdateSourceParams } from './plyr-driver';\n\nexport class DefaultPlyrDriver implements PlyrDriver {\n\n  create(params: PlyrDriverCreateParams) {\n    return new Plyr(params.videoElement, params.options);\n  }\n\n  updateSource(params: PlyrDriverUpdateSourceParams) {\n    params.plyr.source = params.source;\n  }\n\n  destroy(params: PlyrDriverDestroyParams) {\n    params.plyr.destroy();\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, Output, Renderer2, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport Plyr from 'plyr';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter, first, switchMap } from 'rxjs/operators';\nimport { DefaultPlyrDriver } from '../plyr-driver/default-plyr-driver';\nimport { PlyrDriver } from '../plyr-driver/plyr-driver';\n\ninterface PlyrSimpleChanges extends SimpleChanges {\n  plyrType: SimpleChange;\n  plyrTitle: SimpleChange;\n  plyrPoster: SimpleChange;\n  plyrSources: SimpleChange;\n  plyrTracks: SimpleChange;\n  plyrOptions: SimpleChange;\n}\n\n@Component({\n  selector: 'plyr, [plyr]', // tslint:disable-line\n  templateUrl: './plyr.component.html',\n  styleUrls: ['./plyr.component.css'],\n  exportAs: 'plyr'\n})\nexport class PlyrComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  private playerChange = new BehaviorSubject<Plyr>(null);\n\n  get player(): Plyr {\n    return this.playerChange.getValue();\n  }\n\n  private events = new Map();\n\n  @Input() private plyrDriver: PlyrDriver;\n\n  @Input() private plyrType: Plyr.MediaType = 'video';\n\n  @Input() private plyrTitle: string;\n\n  @Input() private plyrPoster: string;\n\n  @Input() private plyrSources: Plyr.Source[];\n\n  @Input() private plyrTracks: Plyr.Track[];\n\n  @Input() private plyrOptions: Plyr.Options;\n\n  @ViewChild('v') private vr: ElementRef;\n\n  // ngx-plyr events\n  @Output() plyrInit = this.playerChange.pipe(filter(player => !!player)) as EventEmitter<Plyr>;\n\n  // standard media events\n  @Output() plyrProgress = this.createLazyEvent('progress');\n  @Output() plyrPlaying = this.createLazyEvent('playing');\n  @Output() plyrPlay = this.createLazyEvent('play');\n  @Output() plyrPause = this.createLazyEvent('pause');\n  @Output() plyrTimeUpdate = this.createLazyEvent('timeupdate');\n  @Output() plyrVolumeChange = this.createLazyEvent('volumechange');\n  @Output() plyrSeeking = this.createLazyEvent('seeking');\n  @Output() plyrSeeked = this.createLazyEvent('seeked');\n  @Output() plyrRateChange = this.createLazyEvent('ratechange');\n  @Output() plyrEnded = this.createLazyEvent('ended');\n  @Output() plyrEnterFullScreen = this.createLazyEvent('enterfullscreen');\n  @Output() plyrExitFullScreen = this.createLazyEvent('exitfullscreen');\n  @Output() plyrCaptionsEnabled = this.createLazyEvent('captionsenabled');\n  @Output() plyrCaptionsDisabled = this.createLazyEvent('captionsdisabled');\n  @Output() plyrLanguageChange = this.createLazyEvent('languagechange');\n  @Output() plyrControlsHidden = this.createLazyEvent('controlshidden');\n  @Output() plyrControlsShown = this.createLazyEvent('controlsshown');\n  @Output() plyrReady = this.createLazyEvent('ready');\n\n  // HTML5 events\n  @Output() plyrLoadStart = this.createLazyEvent('loadstart');\n  @Output() plyrLoadedData = this.createLazyEvent('loadeddata');\n  @Output() plyrLoadedMetadata = this.createLazyEvent('loadedmetadata');\n  @Output() plyrQualityChange = this.createLazyEvent('qualitychange');\n  @Output() plyrCanPlay = this.createLazyEvent('canplay');\n  @Output() plyrCanPlayThrough = this.createLazyEvent('canplaythrough');\n  @Output() plyrStalled = this.createLazyEvent('stalled');\n  @Output() plyrWaiting = this.createLazyEvent('waiting');\n  @Output() plyrEmptied = this.createLazyEvent('emptied');\n  @Output() plyrCueChange = this.createLazyEvent('cuechange');\n  @Output() plyrError = this.createLazyEvent('error');\n\n  // YouTube events\n  @Output() plyrStateChange = this.createLazyEvent('statechange');\n\n  private subscriptions: Subscription[] = [];\n\n  private driver: PlyrDriver;\n\n  private videoElement: HTMLVideoElement;\n\n  constructor(\n    private elementRef: ElementRef<HTMLDivElement>,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n  ) {\n  }\n\n  ngOnChanges(changes: PlyrSimpleChanges) {\n    this.subscriptions.push(this.plyrInit.pipe(first()).subscribe((player: Plyr) => {\n      if (changes.plyrOptions) {\n        if (!changes.plyrOptions.firstChange) {\n          this.initPlyr(true);\n        }\n      } else {\n        this.updatePlyrSource(player);\n      }\n    }));\n  }\n\n  ngOnDestroy() {\n    this.destroyPlayer();\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    this.initPlyr();\n  }\n\n  private initPlyr(force = false) {\n    if (force || !this.player) {\n      this.ngZone.runOutsideAngular(() => {\n        this.destroyPlayer();\n\n        this.driver = this.plyrDriver || new DefaultPlyrDriver();\n\n        this.ensureVideoElement();\n\n        const newPlayer = this.driver.create({\n          videoElement: this.videoElement,\n          options: this.plyrOptions,\n        });\n\n        this.updatePlyrSource(newPlayer);\n\n        this.playerChange.next(newPlayer);\n      });\n    }\n  }\n\n  private updatePlyrSource(plyr: Plyr) {\n    this.driver.updateSource({\n      videoElement: this.videoElement,\n      plyr,\n      source: {\n        type: this.plyrType,\n        title: this.plyrTitle,\n        sources: this.plyrSources,\n        poster: this.plyrPoster,\n        tracks: this.plyrTracks,\n      },\n    });\n  }\n\n  // see https://stackoverflow.com/a/53704102/1990451\n  private createLazyEvent<T extends Plyr.PlyrEvent>(name: Plyr.StandardEvent | Plyr.Html5Event | Plyr.YoutubeEvent): EventEmitter<T> {\n    return this.plyrInit.pipe(\n      switchMap(() => new Observable(observer => this.on(name, (data: T) => this.ngZone.run(() => observer.next(data)))))\n    ) as EventEmitter<T>;\n  }\n\n  private destroyPlayer() {\n    if (this.player) {\n      Array.from(this.events.keys()).forEach(name => this.off(name));\n\n      this.driver.destroy({\n        plyr: this.player,\n      });\n\n      this.videoElement = null;\n    }\n  }\n\n  private get hostElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  // this method is required because the plyr inserts clone of the original element on destroy\n  // so we catch the clone element right here and reuse it\n  private ensureVideoElement() {\n    const videoElement = this.hostElement.querySelector('video');\n\n    if (videoElement) {\n      this.videoElement = videoElement;\n    } else {\n      this.videoElement = this.renderer.createElement('video');\n      this.videoElement.controls = true;\n      this.videoElement.setAttribute('crossorigin', '');\n      this.videoElement.setAttribute('playsinline', '');\n      this.renderer.appendChild(this.hostElement, this.videoElement);\n    }\n  }\n\n  private on(name: string, handler: any) {\n    this.events.set(name, handler);\n    this.player.on(name as any, handler);\n  }\n\n  private off(name: string) {\n    this.player.off(name as any, this.events.get(name));\n    this.events.delete(name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { PlyrComponent } from './plyr/plyr.component';\n\n@NgModule({\n  declarations: [\n    PlyrComponent,\n  ],\n  exports: [\n    PlyrComponent,\n  ]\n})\nexport class PlyrModule { }\n"],"names":["BehaviorSubject","filter","first","switchMap","Observable","Component","ElementRef","NgZone","Renderer2","Input","ViewChild","Output","NgModule"],"mappings":"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"}
