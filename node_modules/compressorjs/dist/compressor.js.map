{"version":3,"file":"compressor.js","sources":["../node_modules/blueimp-canvas-to-blob/js/canvas-to-blob.js","../node_modules/is-blob/index.js","../src/defaults.js","../src/constants.js","../src/utilities.js","../src/index.js"],"sourcesContent":["/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/* global define, Uint8Array, ArrayBuffer, module */\n\n;(function(window) {\n  'use strict'\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype\n  var hasBlobConstructor =\n    window.Blob &&\n    (function() {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })()\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function() {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })()\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function(dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function(callback, type, quality) {\n        var self = this\n        setTimeout(function() {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)))\n          } else {\n            callback(self.mozGetAsFile('blob', type))\n          }\n        })\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function(callback, type, quality) {\n        var self = this\n        setTimeout(function() {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)))\n        })\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n})(window)\n","'use strict';\n\nmodule.exports = input => {\n\tif (typeof Blob === 'undefined') {\n\t\treturn false;\n\t}\n\n\treturn input instanceof Blob || Object.prototype.toString.call(input) === '[object Blob]';\n};\n","export default {\n  /**\n   * Indicates if output the original image instead of the compressed one\n   * when the size of the compressed image is greater than the original one's\n   * @type {boolean}\n   */\n  strict: true,\n\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5 MB by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.fillStyle = '#fff';\n   * }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.filter = 'grayscale(100%)';\n   * }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) {\n   *   console.log(file);\n   * }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) {\n   *   console.log(err.message);\n   * }\n   */\n  error: null,\n};\n","export const IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport const WINDOW = IS_BROWSER ? window : {};\n","import {\n  WINDOW,\n} from './constants';\n\nconst { slice } = Array.prototype;\n\n/**\n * Convert array-like or iterable object to an array.\n * @param {*} value - The value to convert.\n * @returns {Array} Returns a new array.\n */\nexport function toArray(value) {\n  return Array.from ? Array.from(value) : slice.call(value);\n}\n\nconst REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nexport function isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @returns {boolean} Returns the image extension.\n */\nexport function imageTypeToExtension(value) {\n  let extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  return `.${extension}`;\n}\n\nconst { fromCharCode } = String;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\nexport function getStringFromCharCode(dataView, start, length) {\n  let str = '';\n  let i;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nconst { btoa } = WINDOW;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nexport function arrayBufferToDataURL(arrayBuffer, mimeType) {\n  const chunks = [];\n  const chunkSize = 8192;\n  let uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n    // eslint-disable-next-line prefer-spread\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return `data:${mimeType};base64,${btoa(chunks.join(''))}`;\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nexport function resetAndGetOrientation(arrayBuffer) {\n  const dataView = new DataView(arrayBuffer);\n  let orientation;\n\n  // Ignores range error when the image does not have correct Exif information\n  try {\n    let littleEndian;\n    let app1Start;\n    let ifdStart;\n\n    // Only handle JPEG image (start by 0xFFD8)\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      const length = dataView.byteLength;\n      let offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      const exifIDCode = app1Start + 4;\n      const tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        const endianness = dataView.getUint16(tiffOffset);\n\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            const firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n      }\n    }\n\n    if (ifdStart) {\n      const length = dataView.getUint16(ifdStart, littleEndian);\n      let offset;\n      let i;\n\n      for (i = 0; i < length; i += 1) {\n        offset = ifdStart + (i * 12) + 2;\n\n        if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(offset, 1, littleEndian);\n          break;\n        }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nexport function parseOrientation(orientation) {\n  let rotate = 0;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate,\n    scaleX,\n    scaleY,\n  };\n}\n\nconst REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n/**\n * Normalize decimal number.\n * Check out {@link https://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nexport function normalizeDecimalNumber(value, times = 100000000000) {\n  return REGEXP_DECIMALS.test(value) ? (Math.round(value * times) / times) : value;\n}\n","import toBlob from 'blueimp-canvas-to-blob';\nimport isBlob from 'is-blob';\nimport DEFAULTS from './defaults';\nimport {\n  WINDOW,\n} from './constants';\nimport {\n  arrayBufferToDataURL,\n  imageTypeToExtension,\n  isImageType,\n  normalizeDecimalNumber,\n  parseOrientation,\n  resetAndGetOrientation,\n} from './utilities';\n\nconst { ArrayBuffer, FileReader } = WINDOW;\nconst URL = WINDOW.URL || WINDOW.webkitURL;\nconst REGEXP_EXTENSION = /\\.\\w+$/;\nconst AnotherCompressor = WINDOW.Compressor;\n\n/**\n * Creates a new image compressor.\n * @class\n */\nexport default class Compressor {\n  /**\n   * The constructor of Compressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  constructor(file, options) {\n    this.file = file;\n    this.image = new Image();\n    this.options = {\n      ...DEFAULTS,\n      ...options,\n    };\n    this.aborted = false;\n    this.result = null;\n    this.init();\n  }\n\n  init() {\n    const { file, options } = this;\n\n    if (!isBlob(file)) {\n      this.fail(new Error('The first argument must be a File or Blob object.'));\n      return;\n    }\n\n    const mimeType = file.type;\n\n    if (!isImageType(mimeType)) {\n      this.fail(new Error('The first argument must be an image File or Blob object.'));\n      return;\n    }\n\n    if (!URL || !FileReader) {\n      this.fail(new Error('The current browser does not support image compression.'));\n      return;\n    }\n\n    if (!ArrayBuffer) {\n      options.checkOrientation = false;\n    }\n\n    if (URL && !options.checkOrientation) {\n      this.load({\n        url: URL.createObjectURL(file),\n      });\n    } else {\n      const reader = new FileReader();\n      const checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n      this.reader = reader;\n      reader.onload = ({ target }) => {\n        const { result } = target;\n        const data = {};\n\n        if (checkOrientation) {\n          // Reset the orientation value to its default value 1\n          // as some iOS browsers will render image with its orientation\n          const orientation = resetAndGetOrientation(result);\n\n          if (orientation > 1 || !URL) {\n            // Generate a new URL which has the default orientation value\n            data.url = arrayBufferToDataURL(result, mimeType);\n\n            if (orientation > 1) {\n              Object.assign(data, parseOrientation(orientation));\n            }\n          } else {\n            data.url = URL.createObjectURL(file);\n          }\n        } else {\n          data.url = result;\n        }\n\n        this.load(data);\n      };\n      reader.onabort = () => {\n        this.fail(new Error('Aborted to read the image with FileReader.'));\n      };\n      reader.onerror = () => {\n        this.fail(new Error('Failed to read the image with FileReader.'));\n      };\n      reader.onloadend = () => {\n        this.reader = null;\n      };\n\n      if (checkOrientation) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n  load(data) {\n    const { file, image } = this;\n\n    image.onload = () => {\n      this.draw({\n        ...data,\n        naturalWidth: image.naturalWidth,\n        naturalHeight: image.naturalHeight,\n      });\n    };\n    image.onabort = () => {\n      this.fail(new Error('Aborted to load the image.'));\n    };\n    image.onerror = () => {\n      this.fail(new Error('Failed to load the image.'));\n    };\n\n    // Match all browsers that use WebKit as the layout engine in iOS devices,\n    // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n    if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n      // Fix the `The operation is insecure` error (#57)\n      image.crossOrigin = 'anonymous';\n    }\n\n    image.alt = file.name;\n    image.src = data.url;\n  }\n\n  draw({\n    naturalWidth,\n    naturalHeight,\n    rotate = 0,\n    scaleX = 1,\n    scaleY = 1,\n  }) {\n    const { file, image, options } = this;\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const aspectRatio = naturalWidth / naturalHeight;\n    const is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n    let maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n    let maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n    let minWidth = Math.max(options.minWidth, 0) || 0;\n    let minHeight = Math.max(options.minHeight, 0) || 0;\n    let width = Math.max(options.width, 0) || naturalWidth;\n    let height = Math.max(options.height, 0) || naturalHeight;\n\n    if (is90DegreesRotated) {\n      [maxWidth, maxHeight] = [maxHeight, maxWidth];\n      [minWidth, minHeight] = [minHeight, minWidth];\n      [width, height] = [height, width];\n    }\n\n    if (maxWidth < Infinity && maxHeight < Infinity) {\n      if (maxHeight * aspectRatio > maxWidth) {\n        maxHeight = maxWidth / aspectRatio;\n      } else {\n        maxWidth = maxHeight * aspectRatio;\n      }\n    } else if (maxWidth < Infinity) {\n      maxHeight = maxWidth / aspectRatio;\n    } else if (maxHeight < Infinity) {\n      maxWidth = maxHeight * aspectRatio;\n    }\n\n    if (minWidth > 0 && minHeight > 0) {\n      if (minHeight * aspectRatio > minWidth) {\n        minHeight = minWidth / aspectRatio;\n      } else {\n        minWidth = minHeight * aspectRatio;\n      }\n    } else if (minWidth > 0) {\n      minHeight = minWidth / aspectRatio;\n    } else if (minHeight > 0) {\n      minWidth = minHeight * aspectRatio;\n    }\n\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n\n    width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n    height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n\n    const destX = -width / 2;\n    const destY = -height / 2;\n    const destWidth = width;\n    const destHeight = height;\n\n    if (is90DegreesRotated) {\n      [width, height] = [height, width];\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    if (!isImageType(options.mimeType)) {\n      options.mimeType = file.type;\n    }\n\n    let fillStyle = 'transparent';\n\n    // Converts PNG files over the `convertSize` to JPEGs.\n    if (file.size > options.convertSize && options.mimeType === 'image/png') {\n      fillStyle = '#fff';\n      options.mimeType = 'image/jpeg';\n    }\n\n    // Override the default fill color (#000, black)\n    context.fillStyle = fillStyle;\n    context.fillRect(0, 0, width, height);\n\n    if (options.beforeDraw) {\n      options.beforeDraw.call(this, context, canvas);\n    }\n\n    if (this.aborted) {\n      return;\n    }\n\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate((rotate * Math.PI) / 180);\n    context.scale(scaleX, scaleY);\n    context.drawImage(image, destX, destY, destWidth, destHeight);\n    context.restore();\n\n    if (options.drew) {\n      options.drew.call(this, context, canvas);\n    }\n\n    if (this.aborted) {\n      return;\n    }\n\n    const done = (result) => {\n      if (!this.aborted) {\n        this.done({\n          naturalWidth,\n          naturalHeight,\n          result,\n        });\n      }\n    };\n\n    if (canvas.toBlob) {\n      canvas.toBlob(done, options.mimeType, options.quality);\n    } else {\n      done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n    }\n  }\n\n  done({\n    naturalWidth,\n    naturalHeight,\n    result,\n  }) {\n    const { file, image, options } = this;\n\n    if (URL && !options.checkOrientation) {\n      URL.revokeObjectURL(image.src);\n    }\n\n    if (result) {\n      // Returns original file if the result is greater than it and without size related options\n      if (options.strict && result.size > file.size && options.mimeType === file.type && !(\n        options.width > naturalWidth\n        || options.height > naturalHeight\n        || options.minWidth > naturalWidth\n        || options.minHeight > naturalHeight\n      )) {\n        result = file;\n      } else {\n        const date = new Date();\n\n        result.lastModified = date.getTime();\n        result.lastModifiedDate = date;\n        result.name = file.name;\n\n        // Convert the extension to match its type\n        if (result.name && result.type !== file.type) {\n          result.name = result.name.replace(\n            REGEXP_EXTENSION,\n            imageTypeToExtension(result.type),\n          );\n        }\n      }\n    } else {\n      // Returns original file if the result is null in some cases.\n      result = file;\n    }\n\n    this.result = result;\n\n    if (options.success) {\n      options.success.call(this, result);\n    }\n  }\n\n  fail(err) {\n    const { options } = this;\n\n    if (options.error) {\n      options.error.call(this, err);\n    } else {\n      throw err;\n    }\n  }\n\n  abort() {\n    if (!this.aborted) {\n      this.aborted = true;\n\n      if (this.reader) {\n        this.reader.abort();\n      } else if (!this.image.complete) {\n        this.image.onload = null;\n        this.image.onabort();\n      } else {\n        this.fail(new Error('The compression process has been aborted.'));\n      }\n    }\n  }\n\n  /**\n   * Get the no conflict compressor class.\n   * @returns {Compressor} The compressor class.\n   */\n  static noConflict() {\n    window.Compressor = AnotherCompressor;\n    return Compressor;\n  }\n\n  /**\n   * Change the default options.\n   * @param {Object} options - The new default options.\n   */\n  static setDefaults(options) {\n    Object.assign(DEFAULTS, options);\n  }\n}\n"],"names":["window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","i","bb","match","Error","slice","length","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","setTimeout","toDataURL","module","exports","input","Object","toString","call","strict","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","mimeType","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","Array","toArray","value","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","push","apply","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","Compressor","file","options","image","Image","DEFAULTS","aborted","result","init","isBlob","fail","load","url","createObjectURL","reader","onload","target","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","canvas","createElement","context","getContext","aspectRatio","is90DegreesRotated","abs","max","floor","min","destX","destY","destWidth","destHeight","fillStyle","fillRect","save","translate","PI","scale","drawImage","restore","done","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete"],"mappings":"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"}